question:
https://www.codingninjas.com/studio/problems/sorted-array_6613259?utm_source=striver&utm_medium=website&utm_campaign=a_zcoursetuf

solution:
vector < int > sortedArray(vector < int > a, vector < int > b) {
  int i = 0, j = 0;
  int n=a.size();
  int m=b.size(); // pointers
  vector < int > Union; // Uninon vector
  while (i < n && j < m) {
    if (a[i] <= b[j]) // Case 1 and 2
    {
      if (Union.size()==0|| Union.back() != a[i])
        Union.push_back(a[i]);
      i++;
    } else // case 3
    {
      if (Union.size()==0|| Union.back() != b[j])
        Union.push_back(b[j]);
      j++;
    }
  }
  while (i < n) // IF any element left in arr1
  {
    if (Union.back() != a[i])
      Union.push_back(a[i]);
    i++;
  }
  while (j < m) // If any elements left in arr2
  {
    if (Union.back() != b[j])
      Union.push_back(b[j]);
    j++;
  }
  return Union;
}
