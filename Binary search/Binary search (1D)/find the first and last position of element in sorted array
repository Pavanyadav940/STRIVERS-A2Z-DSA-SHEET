https://leetcode.com/problems/find-first-and-last-position-of-element-in-sorted-array/description/
solution:
class Solution {
private: 
    int firstOcc(vector<int>& nums, int target){
        int start = 0 ;
        int end = nums.size()-1;
        int ans = -1;
        while(start <= end){
            int mid = start + (end - start)/2;
            if(nums[mid] == target){
                ans = mid;
                end = mid - 1;
            }
            else if(nums[mid] < target){
                start = mid+1;
            }
            else{
                end = mid - 1;
            }
        }
        return ans;
    }
    int SecondOcc(vector<int>& nums, int target){
        int start = 0 ;
        int end = nums.size()-1;
        int ans = -1;
        while(start <= end){
            int mid = start + (end - start)/2;
            if(nums[mid] == target){
                ans = mid;
                start = mid + 1;
            }
            else if(nums[mid] < target){
                start = mid+1;
            }
            else{
                end = mid - 1;
            }
        }
        return ans;
    }
public:
    vector<int> searchRange(vector<int>& nums, int target) {
        // vector<int> ans ;
        // ans.push_back();
        int ans1 = firstOcc(nums,target);
       int ans2= SecondOcc(nums,target);
        return {ans1,ans2} ;
    }
};
